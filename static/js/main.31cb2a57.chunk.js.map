{"version":3,"sources":["List.js","components/StatusCard/statusCard.jsx","components/StatusBar/StatusBar.js","components/ChartDiv/ChartDiv.js","components/ChatMain/ChartMain.js","components/SubNav/SubNav.js","pages/home_page/home.jsx","components/navbar/navbar.js","components/footer/footer.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","StatusCard","title","topColor","bottomColor","data","className","style","backgroundColor","StatusBar","conformed","recovered","dead","vaccinated","length","y","console","log","Grid","container","direction","justify","alignItems","item","xh","spacing","legend","display","position","labels","fontColor","fontSize","options","text","scales","yAxes","ticks","suggestedMin","suggestedMax","ChartDiv","chartTitle","datasets","label","chartData","fill","borderColor","background","color","ChartMain","md","sm","xs","SubNav","stateName","setStateName","Autocomplete","onChange","event","value","id","stateList","width","renderInput","params","TextField","size","variant","Home","useState","setData","useEffect","axios","get","then","Navbar","Footer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31cb2a57.chunk.js","sourcesContent":["module.exports = [\r\n  \"Andaman and Nicobar Islands\",\r\n  \"Andhra Pradesh\",\r\n  \"Arunachal Pradesh\",\r\n  \"Assam\",\r\n  \"Bihar\",\r\n  \"Chandigarh\",\r\n  \"Chhattisgarh\",\r\n  \"Delhi\",\r\n  \"Dadra and Nagar Haveli\",\r\n  \"Goa\",\r\n  \"Gujarat\",\r\n  \"Himachal Pradesh\",\r\n  \"Haryana\",\r\n  \"Jharkhand\",\r\n  \"Jammu and Kashmir\",\r\n  \"Karnataka\",\r\n  \"Kerala\",\r\n  \"Ladakh\",\r\n  \"Lakshadweep\",\r\n  \"Maharashtra\",\r\n  \"Meghalaya\",\r\n  \"Manipur\",\r\n  \"Madhya Pradesh\",\r\n  \"Mizoram\",\r\n  \"Nagaland\",\r\n  \"Odisha\",\r\n  \"Punjab\",\r\n  \"Puducherry\",\r\n  \"Rajasthan\",\r\n  \"Sikkim\",\r\n  \"Telangana\",\r\n  \"Tamil Nadu\",\r\n  \"Tripura\",\r\n  \"Uttar Pradesh\",\r\n  \"Uttarakhand\",\r\n  \"West Bengal\"\r\n];","import React from \"react\";\r\n\r\nconst StatusCard = ({ title, topColor, bottomColor, data }) => {\r\n  return (\r\n    <div className=\"statusCard\">\r\n      <div className=\"top-card\" style={{ backgroundColor: topColor }}>\r\n        <h1>{title}</h1>\r\n      </div>\r\n      <div className=\"bottom-card\" style={{ backgroundColor: bottomColor }}>\r\n        <h1>{data}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatusCard;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport StatusCard from \"../../components/StatusCard/statusCard\";\r\n\r\nconst StatusBar = ({data}) => {\r\n  let conformed = 0;\r\n  let recovered = 0;\r\n  let dead = 0;\r\n  let vaccinated = 0;\r\n  if (data) {\r\n    conformed = data.conformed[data.conformed.length - 1].y;\r\n    recovered = data.recovered[data.recovered.length - 1].y;\r\n    dead = data.dead[data.dead.length - 1].y;\r\n    vaccinated = data.vaccinated[data.vaccinated.length - 1].y;\r\n    console.log(\"status:\", );\r\n  } \r\n\r\n  return (\r\n    <div className=\"StatusBar\">\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-evenly\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item xh={4} spacing={2}>\r\n          <StatusCard\r\n            title=\"Active Cases\"\r\n            topColor=\"#1FA945\"\r\n            bottomColor=\"#5BD05F\"\r\n            data={conformed}\r\n          />\r\n        </Grid>\r\n        <Grid item xh={4} spacing={2}>\r\n          <StatusCard\r\n            title=\"Cured Cases\"\r\n            topColor=\"#D1B003\"\r\n            bottomColor=\"#E0C563\"\r\n            data={recovered}\r\n          />\r\n        </Grid>\r\n        <Grid item xh={4} spacing={2}>\r\n          <StatusCard\r\n            title=\"Vaccinated Cases\"\r\n            topColor=\"#316CDD\"\r\n            bottomColor=\"#5F98DC\"\r\n            data={vaccinated}\r\n          />\r\n        </Grid>\r\n        <Grid item xh={4} spacing={2}>\r\n          <StatusCard\r\n            title=\"Death Cases\"\r\n            topColor=\"#E41010\"\r\n            bottomColor=\"#F16855\"\r\n            data={dead}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatusBar;\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\n\r\n\r\nconst legend = {\r\n  display: true,\r\n  position: \"bottom\",\r\n  labels: {\r\n    fontColor: \"#323130\",\r\n    fontSize: 14,\r\n  },\r\n};\r\n\r\nconst options = {\r\n  title: {\r\n    display: true,\r\n    text: \"Chart Title\",\r\n  },\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          suggestedMin: 0,\r\n          suggestedMax: 100,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst ChartDiv = ({ topColor, fontColor, chartTitle, chartData }) => {\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        label: chartTitle,\r\n        data: chartData,\r\n        fill: true,\r\n        backgroundColor: topColor,\r\n        borderColor: fontColor,\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <div className=\"chartDiv\">\r\n      <div\r\n        className=\"header\"\r\n        style={{ background: topColor, color: fontColor }}\r\n      >\r\n        <h1>{chartTitle}</h1>\r\n      </div>\r\n      <div className=\"chart-body\">\r\n        <Line data={data} legend={legend} options={options} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartDiv;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport ChartDiv from \"../ChartDiv/ChartDiv\";\r\n\r\nconst ChartMain = ({ data }) => {\r\n   let conformed = [];\r\n   let recovered = [];\r\n   let dead = [];\r\n   let vaccinated = [];\r\n  if (data) {\r\n    conformed = data.conformed;\r\n    recovered = data.recovered;\r\n    dead = data.dead;\r\n    vaccinated = data.vaccinated;\r\n  }\r\n  \r\n  return (\r\n    <div className=\"chartMain\">\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-evenly\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item md={5} sm={10} xs={11} spacing={1}>\r\n          <ChartDiv\r\n            topColor=\"#f9ffbf\"\r\n            fontColor=\"#cc8605\"\r\n            chartTitle=\"Active Cases\"\r\n            chartData={conformed}\r\n          />\r\n        </Grid>\r\n        <Grid item md={5} sm={10} xs={11} spacing={1}>\r\n          <ChartDiv\r\n            topColor=\"#D6FFD2\"\r\n            fontColor=\"#16A669\"\r\n            chartTitle=\"Recoverd Cases\"\r\n            chartData={recovered}\r\n          />\r\n        </Grid>\r\n        <Grid item md={5} sm={10} xs={11} spacing={1}>\r\n          <ChartDiv\r\n            topColor=\"#FFD2D2\"\r\n            fontColor=\"#EF1313\"\r\n            chartTitle=\"Death Cases\"\r\n            chartData={dead}\r\n          />\r\n        </Grid>\r\n        <Grid item md={5} sm={10} xs={11} spacing={1}>\r\n          <ChartDiv\r\n            topColor=\"#AFE7EB\"\r\n            fontColor=\"#3D50FF\"\r\n            chartTitle=\"Vaccinated\"\r\n            chartData={vaccinated}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartMain;\r\n","import {React} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport stateList from \"../../List\";\r\n\r\n\r\n\r\nconst SubNav = ({ stateName, setStateName }) => {\r\n  return (\r\n    <div className=\"SubNav\">\r\n      <div className=\"sub-SubNav\">\r\n        <h1>{stateName}</h1>\r\n        <Autocomplete\r\n          onChange={(event, value) => setStateName(value)}\r\n          id=\"combo-box-demo\"\r\n          options={stateList}\r\n          style={{ width: 300, backgroundColor: \"GrayText\" }}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              size=\"small\"\r\n              color=\"primary\"\r\n              style={{\r\n                backgroundColor: \"lightcyan\",\r\n              }}\r\n              label=\"Choose a State\"\r\n              variant=\"outlined\"\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubNav;\r\n","import { React, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport StatusBar from \"../../components/StatusBar/StatusBar\";\r\nimport ChartMain from \"../../components/ChatMain/ChartMain\";\r\nimport SubNav from \"../../components/SubNav/SubNav\";\r\n\r\nconst Home = () => {\r\n  const [stateName, setStateName] = useState(\"Andaman and Nicobar Islands\");\r\n  const [data, setData] = useState({});\r\n  const [statusBar, setStatusBar] = useState({});\r\n  useEffect(()=>{\r\n    axios.get(\"https://covid-api2021.herokuapp.com/\").then((data) => {\r\n      setData(data.data);\r\n    });\r\n  },[])\r\n  useEffect(() => {\r\n    if(!stateName){\r\n      setStateName(\"Andaman and Nicobar Islands\");\r\n    }\r\n  }, [stateName]);\r\n  return (\r\n    <div className=\"home\">\r\n      <SubNav stateName={stateName} setStateName={setStateName} />\r\n      <StatusBar data={data[stateName]} />\r\n      <ChartMain data={data[stateName]} />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst Navbar = ({stateName,setStateName}) => {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <h1>Covid Tracker!</h1>\r\n      <h1>Track 🗺</h1>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n      <div className=\"footer\">\r\n        <h3>@Copyrights 2021 : Sujith K</h3>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\n\n//Importing pages \nimport Home from \"./pages/home_page/home\";\n\n//Importing components\nimport Navbar from \"./components/navbar/navbar\";\nimport Footer from \"./components/footer/footer\";\n\n//Importing styles\nimport \"./styles/app.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Home />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}